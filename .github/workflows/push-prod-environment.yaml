name: Build images from latest main branch

on:
  push:
    tags:
      - v*

jobs:
  create-main-image:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v1

      - name: Setup Docker
        uses: docker-practice/actions-setup-docker@0.0.1

      - name: Log in to docker registry
        run: |
          echo ${{ secrets.DOCKER_HUB_PASSWORD }} | docker login \
            --username ${{ secrets.DOCKER_HUB_USER }} \
            --password-stdin

      - name: Build new images and push
        run: |
          make \
            build-docker-images \
            push-docker-images
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USER }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
          # webapp
          REACT_APP_VERSION: ${{ github.ref }}
          REACT_APP_NAME: 'proton_affiliate'
          REACT_APP_TITLE: 'Proton Affiliate'
          REACT_APP_LOGO: 'https://raw.githubusercontent.com/eoscostarica/proton-affiliate/main/docs/img/proton-xpr-logo.png'
          REACT_APP_FOOTER_LINKS: '[]'
          REACT_APP_UAL_APP_NAME: 'Proton Affiliate'
          REACT_APP_UAL_API_PROTOCOL: 'https'
          REACT_APP_UAL_API_HOST: 'proton.eosio.cr'
          REACT_APP_UAL_API_PORT: '443'
          REACT_APP_UAL_CHAIN_ID: '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0'
          REACT_APP_HASURA_URL: https://graphql.earnproton.com/v1/graphql

      - name: Build kubernetes files
        id: build_kubernetes_files
        run: |
          make \
            build-kubernetes
        env:
          # general
          NAMESPACE: proton-affiliate
          INGRESS_HOST: earnproton.com
          INGRESS_GRAPHQL_HOST: graphql.earnproton.com
          # postgres
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          # hapi
          HAPI_SERVER_PORT: 9090
          HAPI_SERVER_ADDRESS: 0.0.0.0
          HAPI_NETWORK_API: 'https://proton.eosio.cr'
          HAPI_NETWORK_CHAIN_ID: '384da888112027f0321850a169f737c33e53b388aad48b5adace4bab97f437e0'
          HAPI_NETWORK_WALLET: ${{ secrets.HAPI_NETWORK_WALLET }}
          HAPI_HASURA_URL: ${{ secrets.HAPI_HASURA_URL }}
          HAPI_HASURA_ADMIN_SECRET: ${{ secrets.HAPI_HASURA_ADMIN_SECRET }}
          HAPI_AFFILIATE_ACCOUNT: ${{ secrets.HAPI_AFFILIATE_ACCOUNT }}
          HAPI_AFFILIATE_PASSWORD: ${{ secrets.HAPI_AFFILIATE_PASSWORD }}
          HAPI_AFFILIATE_VERIFY_EXPIRED_INTERVAL: 3600
          HAPI_AFFILIATE_CLEAR_REFERRALS_INTERVAL: 86400
          HAPI_AFFILIATE_SET_RATE_INTERVAL: 86400
          HAPI_HYPERION_API: 'https://proton.eosusa.news'
          HAPI_HYPERION_START_AT: '2021-06-02T00:00:00.000+00:00'
          # hasura
          HASURA_GRAPHQL_ENABLE_CONSOLE: true
          HASURA_GRAPHQL_DATABASE_URL: ${{ secrets.HASURA_GRAPHQL_DATABASE_URL }}
          HASURA_GRAPHQL_ADMIN_SECRET: ${{ secrets.HASURA_GRAPHQL_ADMIN_SECRET }}
          HASURA_GRAPHQL_UNAUTHORIZED_ROLE: ${{ secrets.HASURA_GRAPHQL_UNAUTHORIZED_ROLE }}
          HASURA_GRAPHQL_ACTION_BASE_URL: ${{ secrets.HASURA_GRAPHQL_ACTION_BASE_URL }}

      - name: Deploy kubernetes files
        uses: steebchen/kubectl@v1.1.0
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          NAMESPACE: proton-affiliate
          K8S_BUILD_DIR: build_k8s
        with:
          args: version && make deploy-kubernetes

      - name: Create Release
        id: create_release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          prerelease: true
